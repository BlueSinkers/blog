{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-learning-capitals-08132024-mdx-e8001fa6c0866a14d099.js","mappings":"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","sources":["webpack://blog-v1/./blog/LearningCapitals08132024.mdx","webpack://blog-v1/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://blog-v1/./src/components/article.js","webpack://blog-v1/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Header\"), \"\\n\", React.createElement(_components.p, null, \"This blogpost is particularly intended for those who have spare-time on their hand that waste\\r\\nit doing unproductive things... been there done that. Now, I absolutely understand, empathize, and participate\\r\\nin doing un-academic things (or on a broader level, un-career-focussed things for fun -- as everyone should). Yet, that being said,\\r\\nlike how in school you learn \\\"un-career-focussed\\\" things to very proficient levels, I've always been an advocate\\r\\nfor learning basic geography. It absolutely pains me to see the amount of clueless Americans on\\r\\nthose TikTok or Instagram interviews absolutely bombing basic questions about the 7 continents.\"), \"\\n\", React.createElement(_components.p, null, \"To begin, I want to be clear that I'm preaching as a priest, not a convert... anything\\r\\nI mention in this blogpost is something that I know well enough to a point that I'm comfortable asking\\r\\nothers to do it as well. You can learn more about what I particularly know at this\\r\\n\", React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=xs9Yd33EZCQ\"\n  }, \"video here.\")), \"\\n\", React.createElement(_components.h2, null, \"Basic American Geography\"), \"\\n\", React.createElement(_components.p, null, \"This is an absolute shock to me that people didn't grow up learning where all the states are located.\\r\\nWhen I was younger, my parents bought me an American-state-map puzzle and forced me to do it over\\r\\nand over again in order to remember the locations of every state. Anyway, I think that every single American should\\r\\naim to know at least:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The location of 45 states in the USA (it's understandable to lump some of the smaller states of New England together)\"), \"\\n\", React.createElement(_components.li, null, \"The capitals of every state.\"), \"\\n\", React.createElement(_components.li, null, \"The location of the three countries in the North American Continent.\"), \"\\n\", React.createElement(_components.li, null, \"The main economic powerhouses of each state (if not the capital)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"The reasons why you should learn this aren't necessarily for perspective-case (ie it's not really\\r\\nthat this will broaden your perspective of the world or anything like that because the US is relatively\\r\\nhomogeneous across the 50 states), but rather for education-purposes. Knowing this information is a sign of\\r\\neducation, and especially when interacting with foreign audiences, it is viewed as incredibly immature to be\\r\\nunknowledgeable about the US (especially as an American)!\"), \"\\n\", React.createElement(_components.p, null, \"It goes without saying that, if time and interest permit, you should try to learn the location, appearance, capital,\\r\\nmain economic hubs, and main exports/imports of every American state and territory. Furthermore, learning the location\\r\\nof Canadian/Mexican provinces/states and main economic hubs is also beneficial.\"), \"\\n\", React.createElement(_components.h2, null, \"Global Geography\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/abhi/Documents/Programs/WebDev/blog-gatsby/blog/LearningCapitals08132024.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport Articles from '../../components/article.js';\nconst BlogPage = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(Articles, {\n    title: data.mdx.frontmatter.title,\n    image: data.mdx.frontmatter.image,\n    description: children,\n    datew: data.mdx.frontmatter.dateMade,\n    datee: data.mdx.frontmatter.dateEdited,\n    tags: data.mdx.frontmatter.tags\n  }));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        dateMade\n        dateEdited\n        slug\n        syn\n        tags\n        image\n      }\n      body\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react';\r\nimport './articles.css';\r\n\r\nconst Articles = ({ title, image, description, datew, datee, tags }) => {\r\n  return (\r\n    <>\r\n      <div className=\"container1\">\r\n        <div\r\n          className=\"hero\"\r\n          style={{\r\n            background: `url(${image}) no-repeat center center fixed`,\r\n            backgroundSize: 'cover',\r\n          }}\r\n        >\r\n          <div className=\"hero__image\">\r\n            <div className=\"hero__image--overlay\"></div>\r\n            <div className=\"hero__child hero__child--primary animation--floating\"></div>\r\n            <div className=\"hero__child hero__child--secondary animation--floating\"></div>\r\n            <p className=\"hero__title animation--title-in\">{title}</p>\r\n            <p className=\"hero__subtitle animation--title-in\">by Abhiram Kidambi</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"section\">\r\n        {description}\r\n        <hr/>\r\n        <p className=\"information\">\r\n          Author: Abhiram Kidambi <br/>\r\n          Written: {datew} <br/>\r\n        Tags: {tags.map(tag => tag.toUpperCase()).join(\", \")}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","h2","ul","li","_provideComponents","components","React","href","wrapper","MDXLayout","BlogPage","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","Articles","image","description","datew","dateMade","datee","dateEdited","tags","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","className","style","background","backgroundSize","map","tag","toUpperCase","join","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}